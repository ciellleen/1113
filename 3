# **메모리에 값 저장하기**

```c
#include <stdio.h>
#include <stdlib.h>    

int main()
{
    int *numPtr;    

    numPtr = malloc(sizeof(int));   

    *numPtr = 10; 

    printf("%d\n", *numPtr); 

    free(numPtr);    

    return 0;
}
```

<aside>
💡

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/24fcd1c4-a798-4986-9d64-dabcd1c47cee/image.png)

</aside>

malloc 함수로 할당한 메모리에 값을 저장할 때는 *numPtr = 10;처럼 포인터를 역참조한 뒤 값을 저장하면 됨. 마찬가지로 printf 함수로 값을 출력할 때도 포인터를 역참조하여 값을 가져오면 됨.

메모리를 할당하고 사용한 뒤에는 반드시 free 함수로 해제를 해줌.

> **참고**
> 
> 
> `numPtr2 = malloc(sizeof(int) * 1024 * 1024 * 1024);`
> 
> 계산을 해보면 4294967296인데 GiB로는 4GiB임. 더 큰 메모리도 할당할 수 있지만 실제로 값을 저장할 때는 시스템의 한계(RAM, 디스크) 이상 저장할 수 없음.
>
